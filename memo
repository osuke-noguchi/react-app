# React メモ
## コンポーネント
・小要素はブロック単位で定義する。divなど。フラグメントは使わない。
・pagesの親コンポーネントでは、使ってもいい。`<></>`

## Props
・Booleanのtrueはそのまま渡せる。{}を省略できる
・コンポーネントを渡すときは、コンポーネント化が必要ないときはchildrenとして渡すことが多い

## CSS Modules
コンポーネントで読み込むcssは、コンポーネント名.module.cssなどのcssファイルを作成する。
使いたいコンポーネントでimportする

## Linkコンポーネント
prefetch機能を使うとあらかじめ先のデータを取得するので、画面遷移が早い。aタグの代わりに使う。

## map
コンポーネントを繰り返すときはmapを使う。データと処理を分ける。

## リファクタ
・componentsディレクトリ配下にFooterディレクトリなどを作成。index.jsxとするとimportとパスが長くならい。
・import時のパスは、絶対パスの方が階層が深くならずにわかりやすい。
・絶対パスの補完："javascript.preferences.importModuleSpecifier": "non-relative"　を設定する。
・_app.jsxには共通化したい処理を定義する


## メソッドの定義
・処理が煩雑でない場合はコンポーネントの外に書く。再レンダリングの時に再生成されない。
・中に書く場合は、再レンダリングしたときに再生成させないためにuseCallbackを使う。

## useCallback
再生成されない

## useEffect
マウント時の処理をしたいときに使う。アンマウントの処理はreturnに記述する。

## useState
状態管理に使う。カウントアップなど。

## 破壊的メソッド
破壊的メソッドは使わない。破壊しないためにスプレッド構文を使う。配列やオブジェクトなどはスプレッド構文を使う。
